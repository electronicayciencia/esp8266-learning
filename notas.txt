31/01/2020

ESP-01, ESP2866.

Enlaces: 
https://www.instructables.com/Getting-Started-With-the-ESP8266-ESP-01/
https://medium.com/@aallan/getting-started-with-the-esp8266-270e30feb4d1

https://sub.nanona.fi/esp8266/index.html

https://github.com/espressif/ESP8266_NONOS_SDK


RST -> Vcc
CHPD -> Vcc

Putty: 115200

Importante usar ctrl+m, ctrl+j.


Hace echo.

AT+GMR (en mayúsculas) ctrl+m ctrl+j
AT version:1.3.0.0(Jul 14 2016 18:54:01)
SDK version:2.0.0(5a875ba)
v1.0.0.3
Mar 13 2018 09:35:47


// Modo cliente
AT+CWMODE=1

OK

// Listar access points

AT+CWLAP
+CWLAP:(3,"MOVISTAR_BC04",-60,"1c:b0:44:ce:bc:05",1,25,0)
+CWLAP:(3,"MiFibra-0AC0",-83,"78:dd:12:02:0a:c2",1,25,0)
+CWLAP:(3,"Orange-C23C",-71,"e4:3e:d7:3a:c2:3e",1,28,0)
+CWLAP:(3,"MiFibra-11F9",-81,"52:fe:3b:ae:11:f9",1,25,0)
+CWLAP:(3,"MiFibra-D96A",-82,"78:dd:12:a9:d9:6c",1,30,0)
+CWLAP:(4,"DIGIFIBRA-6Sde",-70,"44:fb:5a:bc:bb:64",2,35,0)
+CWLAP:(3,"Chateau de Fuenki",-70,"78:81:02:80:4d:39",6,43,0)
+CWLAP:(3,"MiFibra-E120",-70,"94:6a:b0:1c:e1:22",6,23,0)
+CWLAP:(3,"MOVISTAR_684F",-76,"98:97:d1:a5:68:50",6,65,0)
+CWLAP:(3,"MOVISTAR_F537",-86,"78:29:ed:fd:f5:38",6,25,0)
+CWLAP:(3,"AsesoriaAlfil",-70,"cc:ed:dc:0a:20:2f",6,35,0)
+CWLAP:(3,"MiFibra-CD6E",-74,"78:dd:12:29:cd:70",6,25,0)
+CWLAP:(4,"MIWIFI_2G_PRzP",-77,"24:d3:f2:e0:fe:92",6,43,0)
+CWLAP:(4,"MIWIFI_2G_JnDh",-65,"e4:ca:12:e2:62:0f",11,30,0)
+CWLAP:(3,"wifi abierta",-45,"44:ad:b1:cb:ee:2e",11,33,0)
+CWLAP:(3,"vodafone8130",-77,"d4:60:e3:88:81:31",11,40,0)
+CWLAP:(3,"COCO",-74,"98:97:d1:ab:82:e4",11,70,0)
+CWLAP:(3,"ONO-MJ",-84,"ec:f4:51:6b:89:9b",11,23,0)
+CWLAP:(3,"MIGUEL",-81,"d8:fb:5e:25:ef:77",1,26,0)


// Conectarse a la wifi

AT+CWJAP="wifi abierta","password"
WIFI CONNECTED
WIFI GOT IP

OK

// Información sobre si estamos conectados

AT+CIFSR
+CIFSR:STAIP,"192.168.1.131"
+CIFSR:STAMAC,"cc:50:e3:5d:6b:a7"

OK

// Iniciar servidor

OK
AT+CIPMUX=1

OK
AT+CIPSERVER=1,80

OK

// Conectarse desde el PC a http://192.168.1.131:80/
// recibimos la conexión

0,CONNECT

+IPD,0,425:GET / HTTP/1.1
Host: 192.168.1.131
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/5
37.36 (KHTML, like Gecko) Chrome/81.0.4044.92 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9
,image/avif,image/webp,image/apng,*/*;q=0.8,application/signe
d-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: es-ES,es;q=0.9



Reset
----------

AT+RST

OK

ets Jan  8 2013,rst cause:2, boot mode:(3,6)

load 0x40100000, len 2408, room 16
tail 8
chksum 0xe5
load 0x3ffe8000, len 776, room 0
tail 8
chksum 0x84
load 0x3ffe8310, len 632, room 0
tail 8
chksum 0xd8
csum 0xd8

2nd boot version : 1.6
SPI Speed      : 40MHz
SPI Mode       : QIO
SPI Flash Size & Map: 8Mbit(512KB+512KB)
jump to run user1 @ 1000

2 N | r  n|      l`   r l d     d    r $ l2    l`   r l | 
ll  rl  r$   cB   b # br    {   c  n  2oN     d    d    | 74880 baudios
l  ll  l     l    n     bc l $   c      B" l  # rlrd    | 
ready
WIFI CONNECTED
WIFI GOT IP


------------------------------------

Logs del arranque (hay que poner 74880 bauds):


     ets Jan  8 2013,rst cause:2, boot mode:(3,7)
    
    load 0x40100000, len 2408, room 16 
    tail 8
    chksum 0xe5
    load 0x3ffe8000, len 776, room 0 
    tail 8
    chksum 0x84
    load 0x3ffe8310, len 632, room 0 
    tail 8
    chksum 0xd8
    csum 0xd8
    
    2nd boot version : 1.6
      SPI Speed      : 40MHz
      SPI Mode       : QIO
      SPI Flash Size & Map: 8Mbit(512KB+512KB)
    jump to run user1 @ 1000
    
    rf cal sector: 249
    rf[112] : 00
    rf[113] : 00
    rf[114] : 01
    
    SDK ver: 2.0.0(5a875ba) compiled @ Aug  9 2016 15:12:27
    phy ver: 1055, pp ver: 10.2



-----------------------

Instalar esptool:
repo oficial: https://github.com/espressif/esptool
>pip install esptool


(reset con GPIO0 pulsado)

C:\>esptool.py chip_id
esptool.py v2.8
Found 1 serial ports
Serial port COM3
Connecting....
Detecting chip type... ESP8266
Chip is ESP8266EX
Features: WiFi
Crystal is 26MHz
MAC: cc:50:e3:5d:6a:90
Uploading stub...
Running stub...
Stub running...
Chip ID: 0x005d6a90
Hard resetting via RTS pin...


PS D:\tmp\esp8266> esptool.py flash_id
esptool.py v2.8
Found 1 serial ports
Serial port COM3
Connecting........_
Detecting chip type... ESP8266
Chip is ESP8266EX
Features: WiFi
Crystal is 26MHz
MAC: cc:50:e3:5d:6a:90
Uploading stub...
Running stub...
Stub running...
Manufacturer: 85
Device: 6014
Detected flash size: 1MB
Hard resetting via RTS pin...


Copia de seguridad del contenido de la flash

esptool.py --baud 115200 read_flash 0x00000 0x100000 backup.img

--------------------------------

Instalar platform IO. Extensión de vscode.

Dos SDK, una con RTOS y otra sin él (nonos). Con ESP32 sólo está la RTOS. La nonos podría quedar sin soporte.
https://github.com/espressif/ESP8266_NONOS_SDK/issues/229

    Support Policy for ESP8266 NonOS (Starting from December 2019)
    
    - We will not add any new features to the ESP8266 NonOS SDK.
    - We will only fix critical bugs in the ESP8266 NonOS SDK.
	...
    - It is suggested that the ESP8266_RTOS_SDK, instead of ESP8266 NonOS SDK, be used for your projects.



Ir a import example proyect.
Al compilar seleccionar la placa correspondiente, o crear las opciones en .platformio:
[env:esp01_1m]
platform = espressif8266
    board = esp01_1m
    framework = esp8266-nonos-sdk
    monitor_speed = 74880
    build_flags = -I include



La SDK necesita fichero user_config.h

El linker necesita dos funciones más:
(.irom0.text+0x748): undefined reference to `user_init'
(.irom0.text+0x8e7): undefined reference to `user_rf_cal_sector_set'



La versión de la SDK para ESP8266 que viene con PlatformIO parece ser muy antigua.


----------------------------
android-a2bdf5:/cygdrive/d/tmp/esp$ 
git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git

IDF_PATH=/cygdrive/d/tmp/esp/ESP8266_RTOS_SDK

----------------------

Seguir estas instrucciones:

https://docs.espressif.com/projects/esp8266-rtos-sdk/en/latest/get-started/windows-setup.html

En cygwin:

export IDF_PATH=/home/Reinoso/esp/ESP8266_RTOS_SDK
. ${IDF_PATH}/add_path.sh


Copiar la toolchain xtensa-lx106-elf a /opt y añadir su ruta en el $PATH

Falla el linker:

LD build/hello-world.elf
d:/tmp/esp/msys32/opt/xtensa-lx106-elf/bin/../lib/gcc/xtensa-lx106-elf/5.2.0/../../../../xtensa-lx106-elf/bin/ld.exe: cannot find -lc_nano
collect2.exe: error: ld returned 1 exit status
make: *** [/home/Reinoso/esp/ESP8266_RTOS_SDK/make/project.mk:510: /home/Reinoso/esp/hello_world/build/hello-world.elf] Error 1

cambio en sdkconfig:
CONFIG_NEWLIB_NANO_FORMAT=y
por
CONFIG_NEWLIB_NANO_FORMAT=n

make // Compila
make flash // Flashea bien
make monitor // leer del puerto serie


Para VSC:

Ajusto los includes:

    ${default}
    ${workspaceFolder}\build\include
    D:\tmp\esp\msys32\**
    D:\tmp\esp\msys32\home\Reinoso\esp\ESP8266_RTOS_SDK\components\freertos\**

ssh-keygen // crear clave para git


vscode reconoce las rutas con / además de con \




-------------

Otra prueba:

https://docs.espressif.com/projects/esp8266-rtos-sdk/en/latest/

Funciona con Eclipse

























